/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ModifyOrder struct for ModifyOrder
type ModifyOrder struct {
	AcctId *string `json:"acctId,omitempty"`
	Conid *int32 `json:"conid,omitempty"`
	// customer orderid
	OrderId *int32 `json:"orderId,omitempty"`
	// for example LMT
	OrderType *string `json:"orderType,omitempty"`
	OutsideRTH *bool `json:"outsideRTH,omitempty"`
	Price *float32 `json:"price,omitempty"`
	AuxPrice *float32 `json:"auxPrice,omitempty"`
	// SELL or BUY
	Side *string `json:"side,omitempty"`
	// optional, not required
	ListingExchange *string `json:"listingExchange,omitempty"`
	Ticker *string `json:"ticker,omitempty"`
	// for example DAY
	Tif *string `json:"tif,omitempty"`
	// usually integer, for some special cases can be float numbers
	Quantity *float32 `json:"quantity,omitempty"`
}

// NewModifyOrder instantiates a new ModifyOrder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyOrder() *ModifyOrder {
	this := ModifyOrder{}
	return &this
}

// NewModifyOrderWithDefaults instantiates a new ModifyOrder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyOrderWithDefaults() *ModifyOrder {
	this := ModifyOrder{}
	return &this
}

// GetAcctId returns the AcctId field value if set, zero value otherwise.
func (o *ModifyOrder) GetAcctId() string {
	if o == nil || o.AcctId == nil {
		var ret string
		return ret
	}
	return *o.AcctId
}

// GetAcctIdOk returns a tuple with the AcctId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetAcctIdOk() (*string, bool) {
	if o == nil || o.AcctId == nil {
		return nil, false
	}
	return o.AcctId, true
}

// HasAcctId returns a boolean if a field has been set.
func (o *ModifyOrder) HasAcctId() bool {
	if o != nil && o.AcctId != nil {
		return true
	}

	return false
}

// SetAcctId gets a reference to the given string and assigns it to the AcctId field.
func (o *ModifyOrder) SetAcctId(v string) {
	o.AcctId = &v
}

// GetConid returns the Conid field value if set, zero value otherwise.
func (o *ModifyOrder) GetConid() int32 {
	if o == nil || o.Conid == nil {
		var ret int32
		return ret
	}
	return *o.Conid
}

// GetConidOk returns a tuple with the Conid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetConidOk() (*int32, bool) {
	if o == nil || o.Conid == nil {
		return nil, false
	}
	return o.Conid, true
}

// HasConid returns a boolean if a field has been set.
func (o *ModifyOrder) HasConid() bool {
	if o != nil && o.Conid != nil {
		return true
	}

	return false
}

// SetConid gets a reference to the given int32 and assigns it to the Conid field.
func (o *ModifyOrder) SetConid(v int32) {
	o.Conid = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *ModifyOrder) GetOrderId() int32 {
	if o == nil || o.OrderId == nil {
		var ret int32
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetOrderIdOk() (*int32, bool) {
	if o == nil || o.OrderId == nil {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *ModifyOrder) HasOrderId() bool {
	if o != nil && o.OrderId != nil {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int32 and assigns it to the OrderId field.
func (o *ModifyOrder) SetOrderId(v int32) {
	o.OrderId = &v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *ModifyOrder) GetOrderType() string {
	if o == nil || o.OrderType == nil {
		var ret string
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetOrderTypeOk() (*string, bool) {
	if o == nil || o.OrderType == nil {
		return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *ModifyOrder) HasOrderType() bool {
	if o != nil && o.OrderType != nil {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given string and assigns it to the OrderType field.
func (o *ModifyOrder) SetOrderType(v string) {
	o.OrderType = &v
}

// GetOutsideRTH returns the OutsideRTH field value if set, zero value otherwise.
func (o *ModifyOrder) GetOutsideRTH() bool {
	if o == nil || o.OutsideRTH == nil {
		var ret bool
		return ret
	}
	return *o.OutsideRTH
}

// GetOutsideRTHOk returns a tuple with the OutsideRTH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetOutsideRTHOk() (*bool, bool) {
	if o == nil || o.OutsideRTH == nil {
		return nil, false
	}
	return o.OutsideRTH, true
}

// HasOutsideRTH returns a boolean if a field has been set.
func (o *ModifyOrder) HasOutsideRTH() bool {
	if o != nil && o.OutsideRTH != nil {
		return true
	}

	return false
}

// SetOutsideRTH gets a reference to the given bool and assigns it to the OutsideRTH field.
func (o *ModifyOrder) SetOutsideRTH(v bool) {
	o.OutsideRTH = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ModifyOrder) GetPrice() float32 {
	if o == nil || o.Price == nil {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetPriceOk() (*float32, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ModifyOrder) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *ModifyOrder) SetPrice(v float32) {
	o.Price = &v
}

// GetAuxPrice returns the AuxPrice field value if set, zero value otherwise.
func (o *ModifyOrder) GetAuxPrice() float32 {
	if o == nil || o.AuxPrice == nil {
		var ret float32
		return ret
	}
	return *o.AuxPrice
}

// GetAuxPriceOk returns a tuple with the AuxPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetAuxPriceOk() (*float32, bool) {
	if o == nil || o.AuxPrice == nil {
		return nil, false
	}
	return o.AuxPrice, true
}

// HasAuxPrice returns a boolean if a field has been set.
func (o *ModifyOrder) HasAuxPrice() bool {
	if o != nil && o.AuxPrice != nil {
		return true
	}

	return false
}

// SetAuxPrice gets a reference to the given float32 and assigns it to the AuxPrice field.
func (o *ModifyOrder) SetAuxPrice(v float32) {
	o.AuxPrice = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *ModifyOrder) GetSide() string {
	if o == nil || o.Side == nil {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetSideOk() (*string, bool) {
	if o == nil || o.Side == nil {
		return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *ModifyOrder) HasSide() bool {
	if o != nil && o.Side != nil {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *ModifyOrder) SetSide(v string) {
	o.Side = &v
}

// GetListingExchange returns the ListingExchange field value if set, zero value otherwise.
func (o *ModifyOrder) GetListingExchange() string {
	if o == nil || o.ListingExchange == nil {
		var ret string
		return ret
	}
	return *o.ListingExchange
}

// GetListingExchangeOk returns a tuple with the ListingExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetListingExchangeOk() (*string, bool) {
	if o == nil || o.ListingExchange == nil {
		return nil, false
	}
	return o.ListingExchange, true
}

// HasListingExchange returns a boolean if a field has been set.
func (o *ModifyOrder) HasListingExchange() bool {
	if o != nil && o.ListingExchange != nil {
		return true
	}

	return false
}

// SetListingExchange gets a reference to the given string and assigns it to the ListingExchange field.
func (o *ModifyOrder) SetListingExchange(v string) {
	o.ListingExchange = &v
}

// GetTicker returns the Ticker field value if set, zero value otherwise.
func (o *ModifyOrder) GetTicker() string {
	if o == nil || o.Ticker == nil {
		var ret string
		return ret
	}
	return *o.Ticker
}

// GetTickerOk returns a tuple with the Ticker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetTickerOk() (*string, bool) {
	if o == nil || o.Ticker == nil {
		return nil, false
	}
	return o.Ticker, true
}

// HasTicker returns a boolean if a field has been set.
func (o *ModifyOrder) HasTicker() bool {
	if o != nil && o.Ticker != nil {
		return true
	}

	return false
}

// SetTicker gets a reference to the given string and assigns it to the Ticker field.
func (o *ModifyOrder) SetTicker(v string) {
	o.Ticker = &v
}

// GetTif returns the Tif field value if set, zero value otherwise.
func (o *ModifyOrder) GetTif() string {
	if o == nil || o.Tif == nil {
		var ret string
		return ret
	}
	return *o.Tif
}

// GetTifOk returns a tuple with the Tif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetTifOk() (*string, bool) {
	if o == nil || o.Tif == nil {
		return nil, false
	}
	return o.Tif, true
}

// HasTif returns a boolean if a field has been set.
func (o *ModifyOrder) HasTif() bool {
	if o != nil && o.Tif != nil {
		return true
	}

	return false
}

// SetTif gets a reference to the given string and assigns it to the Tif field.
func (o *ModifyOrder) SetTif(v string) {
	o.Tif = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ModifyOrder) GetQuantity() float32 {
	if o == nil || o.Quantity == nil {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyOrder) GetQuantityOk() (*float32, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ModifyOrder) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *ModifyOrder) SetQuantity(v float32) {
	o.Quantity = &v
}

func (o ModifyOrder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AcctId != nil {
		toSerialize["acctId"] = o.AcctId
	}
	if o.Conid != nil {
		toSerialize["conid"] = o.Conid
	}
	if o.OrderId != nil {
		toSerialize["orderId"] = o.OrderId
	}
	if o.OrderType != nil {
		toSerialize["orderType"] = o.OrderType
	}
	if o.OutsideRTH != nil {
		toSerialize["outsideRTH"] = o.OutsideRTH
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.AuxPrice != nil {
		toSerialize["auxPrice"] = o.AuxPrice
	}
	if o.Side != nil {
		toSerialize["side"] = o.Side
	}
	if o.ListingExchange != nil {
		toSerialize["listingExchange"] = o.ListingExchange
	}
	if o.Ticker != nil {
		toSerialize["ticker"] = o.Ticker
	}
	if o.Tif != nil {
		toSerialize["tif"] = o.Tif
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	return json.Marshal(toSerialize)
}

type NullableModifyOrder struct {
	value *ModifyOrder
	isSet bool
}

func (v NullableModifyOrder) Get() *ModifyOrder {
	return v.value
}

func (v *NullableModifyOrder) Set(val *ModifyOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyOrder(val *ModifyOrder) *NullableModifyOrder {
	return &NullableModifyOrder{value: val, isSet: true}
}

func (v NullableModifyOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


