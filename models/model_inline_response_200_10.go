/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20010 struct for InlineResponse20010
type InlineResponse20010 struct {
	// Unique account id
	Accounts *[]string `json:"accounts,omitempty"`
	// Account Id and its alias
	Aliases *map[string]interface{} `json:"aliases,omitempty"`
	SelectedAccount *string `json:"selectedAccount,omitempty"`
}

// NewInlineResponse20010 instantiates a new InlineResponse20010 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20010() *InlineResponse20010 {
	this := InlineResponse20010{}
	return &this
}

// NewInlineResponse20010WithDefaults instantiates a new InlineResponse20010 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20010WithDefaults() *InlineResponse20010 {
	this := InlineResponse20010{}
	return &this
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *InlineResponse20010) GetAccounts() []string {
	if o == nil || o.Accounts == nil {
		var ret []string
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20010) GetAccountsOk() (*[]string, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *InlineResponse20010) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []string and assigns it to the Accounts field.
func (o *InlineResponse20010) SetAccounts(v []string) {
	o.Accounts = &v
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *InlineResponse20010) GetAliases() map[string]interface{} {
	if o == nil || o.Aliases == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20010) GetAliasesOk() (*map[string]interface{}, bool) {
	if o == nil || o.Aliases == nil {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *InlineResponse20010) HasAliases() bool {
	if o != nil && o.Aliases != nil {
		return true
	}

	return false
}

// SetAliases gets a reference to the given map[string]interface{} and assigns it to the Aliases field.
func (o *InlineResponse20010) SetAliases(v map[string]interface{}) {
	o.Aliases = &v
}

// GetSelectedAccount returns the SelectedAccount field value if set, zero value otherwise.
func (o *InlineResponse20010) GetSelectedAccount() string {
	if o == nil || o.SelectedAccount == nil {
		var ret string
		return ret
	}
	return *o.SelectedAccount
}

// GetSelectedAccountOk returns a tuple with the SelectedAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20010) GetSelectedAccountOk() (*string, bool) {
	if o == nil || o.SelectedAccount == nil {
		return nil, false
	}
	return o.SelectedAccount, true
}

// HasSelectedAccount returns a boolean if a field has been set.
func (o *InlineResponse20010) HasSelectedAccount() bool {
	if o != nil && o.SelectedAccount != nil {
		return true
	}

	return false
}

// SetSelectedAccount gets a reference to the given string and assigns it to the SelectedAccount field.
func (o *InlineResponse20010) SetSelectedAccount(v string) {
	o.SelectedAccount = &v
}

func (o InlineResponse20010) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	if o.Aliases != nil {
		toSerialize["aliases"] = o.Aliases
	}
	if o.SelectedAccount != nil {
		toSerialize["selectedAccount"] = o.SelectedAccount
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20010 struct {
	value *InlineResponse20010
	isSet bool
}

func (v NullableInlineResponse20010) Get() *InlineResponse20010 {
	return v.value
}

func (v *NullableInlineResponse20010) Set(val *InlineResponse20010) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20010) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20010) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20010(val *InlineResponse20010) *NullableInlineResponse20010 {
	return &NullableInlineResponse20010{value: val, isSet: true}
}

func (v NullableInlineResponse20010) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20010) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


