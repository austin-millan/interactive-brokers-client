/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse2009 struct for InlineResponse2009
type InlineResponse2009 struct {
	ACCTID *[]map[string]interface{} `json:"ACCTID,omitempty"`
}

// NewInlineResponse2009 instantiates a new InlineResponse2009 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2009() *InlineResponse2009 {
	this := InlineResponse2009{}
	return &this
}

// NewInlineResponse2009WithDefaults instantiates a new InlineResponse2009 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2009WithDefaults() *InlineResponse2009 {
	this := InlineResponse2009{}
	return &this
}

// GetACCTID returns the ACCTID field value if set, zero value otherwise.
func (o *InlineResponse2009) GetACCTID() []map[string]interface{} {
	if o == nil || o.ACCTID == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.ACCTID
}

// GetACCTIDOk returns a tuple with the ACCTID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009) GetACCTIDOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.ACCTID == nil {
		return nil, false
	}
	return o.ACCTID, true
}

// HasACCTID returns a boolean if a field has been set.
func (o *InlineResponse2009) HasACCTID() bool {
	if o != nil && o.ACCTID != nil {
		return true
	}

	return false
}

// SetACCTID gets a reference to the given []map[string]interface{} and assigns it to the ACCTID field.
func (o *InlineResponse2009) SetACCTID(v []map[string]interface{}) {
	o.ACCTID = &v
}

func (o InlineResponse2009) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ACCTID != nil {
		toSerialize["ACCTID"] = o.ACCTID
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2009 struct {
	value *InlineResponse2009
	isSet bool
}

func (v NullableInlineResponse2009) Get() *InlineResponse2009 {
	return v.value
}

func (v *NullableInlineResponse2009) Set(val *InlineResponse2009) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2009) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2009) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2009(val *InlineResponse2009) *NullableInlineResponse2009 {
	return &NullableInlineResponse2009{value: val, isSet: true}
}

func (v NullableInlineResponse2009) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2009) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


