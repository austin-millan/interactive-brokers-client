/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject2 struct for InlineObject2
type InlineObject2 struct {
	AcctIds *[]string `json:"acctIds,omitempty"`
	// Frequency of cumulative performance data points: 'D'aily, 'M'onthly,'Q'uarterly. 
	Freq *string `json:"freq,omitempty"`
}

// NewInlineObject2 instantiates a new InlineObject2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject2() *InlineObject2 {
	this := InlineObject2{}
	return &this
}

// NewInlineObject2WithDefaults instantiates a new InlineObject2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject2WithDefaults() *InlineObject2 {
	this := InlineObject2{}
	return &this
}

// GetAcctIds returns the AcctIds field value if set, zero value otherwise.
func (o *InlineObject2) GetAcctIds() []string {
	if o == nil || o.AcctIds == nil {
		var ret []string
		return ret
	}
	return *o.AcctIds
}

// GetAcctIdsOk returns a tuple with the AcctIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject2) GetAcctIdsOk() (*[]string, bool) {
	if o == nil || o.AcctIds == nil {
		return nil, false
	}
	return o.AcctIds, true
}

// HasAcctIds returns a boolean if a field has been set.
func (o *InlineObject2) HasAcctIds() bool {
	if o != nil && o.AcctIds != nil {
		return true
	}

	return false
}

// SetAcctIds gets a reference to the given []string and assigns it to the AcctIds field.
func (o *InlineObject2) SetAcctIds(v []string) {
	o.AcctIds = &v
}

// GetFreq returns the Freq field value if set, zero value otherwise.
func (o *InlineObject2) GetFreq() string {
	if o == nil || o.Freq == nil {
		var ret string
		return ret
	}
	return *o.Freq
}

// GetFreqOk returns a tuple with the Freq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject2) GetFreqOk() (*string, bool) {
	if o == nil || o.Freq == nil {
		return nil, false
	}
	return o.Freq, true
}

// HasFreq returns a boolean if a field has been set.
func (o *InlineObject2) HasFreq() bool {
	if o != nil && o.Freq != nil {
		return true
	}

	return false
}

// SetFreq gets a reference to the given string and assigns it to the Freq field.
func (o *InlineObject2) SetFreq(v string) {
	o.Freq = &v
}

func (o InlineObject2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AcctIds != nil {
		toSerialize["acctIds"] = o.AcctIds
	}
	if o.Freq != nil {
		toSerialize["freq"] = o.Freq
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject2 struct {
	value *InlineObject2
	isSet bool
}

func (v NullableInlineObject2) Get() *InlineObject2 {
	return v.value
}

func (v *NullableInlineObject2) Set(val *InlineObject2) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject2) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject2(val *InlineObject2) *NullableInlineObject2 {
	return &NullableInlineObject2{value: val, isSet: true}
}

func (v NullableInlineObject2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


