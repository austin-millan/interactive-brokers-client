/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20014 struct for InlineResponse20014
type InlineResponse20014 struct {
	OrderId *string `json:"order_id,omitempty"`
	OrderStatus *string `json:"order_status,omitempty"`
	LocalOrderId *string `json:"local_order_id,omitempty"`
}

// NewInlineResponse20014 instantiates a new InlineResponse20014 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20014() *InlineResponse20014 {
	this := InlineResponse20014{}
	return &this
}

// NewInlineResponse20014WithDefaults instantiates a new InlineResponse20014 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20014WithDefaults() *InlineResponse20014 {
	this := InlineResponse20014{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *InlineResponse20014) GetOrderId() string {
	if o == nil || o.OrderId == nil {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014) GetOrderIdOk() (*string, bool) {
	if o == nil || o.OrderId == nil {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *InlineResponse20014) HasOrderId() bool {
	if o != nil && o.OrderId != nil {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *InlineResponse20014) SetOrderId(v string) {
	o.OrderId = &v
}

// GetOrderStatus returns the OrderStatus field value if set, zero value otherwise.
func (o *InlineResponse20014) GetOrderStatus() string {
	if o == nil || o.OrderStatus == nil {
		var ret string
		return ret
	}
	return *o.OrderStatus
}

// GetOrderStatusOk returns a tuple with the OrderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014) GetOrderStatusOk() (*string, bool) {
	if o == nil || o.OrderStatus == nil {
		return nil, false
	}
	return o.OrderStatus, true
}

// HasOrderStatus returns a boolean if a field has been set.
func (o *InlineResponse20014) HasOrderStatus() bool {
	if o != nil && o.OrderStatus != nil {
		return true
	}

	return false
}

// SetOrderStatus gets a reference to the given string and assigns it to the OrderStatus field.
func (o *InlineResponse20014) SetOrderStatus(v string) {
	o.OrderStatus = &v
}

// GetLocalOrderId returns the LocalOrderId field value if set, zero value otherwise.
func (o *InlineResponse20014) GetLocalOrderId() string {
	if o == nil || o.LocalOrderId == nil {
		var ret string
		return ret
	}
	return *o.LocalOrderId
}

// GetLocalOrderIdOk returns a tuple with the LocalOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014) GetLocalOrderIdOk() (*string, bool) {
	if o == nil || o.LocalOrderId == nil {
		return nil, false
	}
	return o.LocalOrderId, true
}

// HasLocalOrderId returns a boolean if a field has been set.
func (o *InlineResponse20014) HasLocalOrderId() bool {
	if o != nil && o.LocalOrderId != nil {
		return true
	}

	return false
}

// SetLocalOrderId gets a reference to the given string and assigns it to the LocalOrderId field.
func (o *InlineResponse20014) SetLocalOrderId(v string) {
	o.LocalOrderId = &v
}

func (o InlineResponse20014) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderId != nil {
		toSerialize["order_id"] = o.OrderId
	}
	if o.OrderStatus != nil {
		toSerialize["order_status"] = o.OrderStatus
	}
	if o.LocalOrderId != nil {
		toSerialize["local_order_id"] = o.LocalOrderId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20014 struct {
	value *InlineResponse20014
	isSet bool
}

func (v NullableInlineResponse20014) Get() *InlineResponse20014 {
	return v.value
}

func (v *NullableInlineResponse20014) Set(val *InlineResponse20014) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20014) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20014) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20014(val *InlineResponse20014) *NullableInlineResponse20014 {
	return &NullableInlineResponse20014{value: val, isSet: true}
}

func (v NullableInlineResponse20014) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20014) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


