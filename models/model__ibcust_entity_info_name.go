/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IbcustEntityInfoName struct for IbcustEntityInfoName
type IbcustEntityInfoName struct {
	Salutation *string `json:"salutation,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
}

// NewIbcustEntityInfoName instantiates a new IbcustEntityInfoName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIbcustEntityInfoName() *IbcustEntityInfoName {
	this := IbcustEntityInfoName{}
	return &this
}

// NewIbcustEntityInfoNameWithDefaults instantiates a new IbcustEntityInfoName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIbcustEntityInfoNameWithDefaults() *IbcustEntityInfoName {
	this := IbcustEntityInfoName{}
	return &this
}

// GetSalutation returns the Salutation field value if set, zero value otherwise.
func (o *IbcustEntityInfoName) GetSalutation() string {
	if o == nil || o.Salutation == nil {
		var ret string
		return ret
	}
	return *o.Salutation
}

// GetSalutationOk returns a tuple with the Salutation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoName) GetSalutationOk() (*string, bool) {
	if o == nil || o.Salutation == nil {
		return nil, false
	}
	return o.Salutation, true
}

// HasSalutation returns a boolean if a field has been set.
func (o *IbcustEntityInfoName) HasSalutation() bool {
	if o != nil && o.Salutation != nil {
		return true
	}

	return false
}

// SetSalutation gets a reference to the given string and assigns it to the Salutation field.
func (o *IbcustEntityInfoName) SetSalutation(v string) {
	o.Salutation = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *IbcustEntityInfoName) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoName) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *IbcustEntityInfoName) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *IbcustEntityInfoName) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *IbcustEntityInfoName) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoName) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *IbcustEntityInfoName) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *IbcustEntityInfoName) SetLastName(v string) {
	o.LastName = &v
}

func (o IbcustEntityInfoName) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Salutation != nil {
		toSerialize["salutation"] = o.Salutation
	}
	if o.FirstName != nil {
		toSerialize["firstName"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["lastName"] = o.LastName
	}
	return json.Marshal(toSerialize)
}

type NullableIbcustEntityInfoName struct {
	value *IbcustEntityInfoName
	isSet bool
}

func (v NullableIbcustEntityInfoName) Get() *IbcustEntityInfoName {
	return v.value
}

func (v *NullableIbcustEntityInfoName) Set(val *IbcustEntityInfoName) {
	v.value = val
	v.isSet = true
}

func (v NullableIbcustEntityInfoName) IsSet() bool {
	return v.isSet
}

func (v *NullableIbcustEntityInfoName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIbcustEntityInfoName(val *IbcustEntityInfoName) *NullableIbcustEntityInfoName {
	return &NullableIbcustEntityInfoName{value: val, isSet: true}
}

func (v NullableIbcustEntityInfoName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIbcustEntityInfoName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


