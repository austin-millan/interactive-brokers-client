/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20018 struct for InlineResponse20018
type InlineResponse20018 struct {
	Conid *int32 `json:"conid,omitempty"`
	CompanyHeader *string `json:"companyHeader,omitempty"`
	CompanyName *string `json:"companyName,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	Description *string `json:"description,omitempty"`
	Opt *string `json:"opt,omitempty"`
	War *string `json:"war,omitempty"`
	Sections *[]map[string]interface{} `json:"sections,omitempty"`
}

// NewInlineResponse20018 instantiates a new InlineResponse20018 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20018() *InlineResponse20018 {
	this := InlineResponse20018{}
	return &this
}

// NewInlineResponse20018WithDefaults instantiates a new InlineResponse20018 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20018WithDefaults() *InlineResponse20018 {
	this := InlineResponse20018{}
	return &this
}

// GetConid returns the Conid field value if set, zero value otherwise.
func (o *InlineResponse20018) GetConid() int32 {
	if o == nil || o.Conid == nil {
		var ret int32
		return ret
	}
	return *o.Conid
}

// GetConidOk returns a tuple with the Conid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018) GetConidOk() (*int32, bool) {
	if o == nil || o.Conid == nil {
		return nil, false
	}
	return o.Conid, true
}

// HasConid returns a boolean if a field has been set.
func (o *InlineResponse20018) HasConid() bool {
	if o != nil && o.Conid != nil {
		return true
	}

	return false
}

// SetConid gets a reference to the given int32 and assigns it to the Conid field.
func (o *InlineResponse20018) SetConid(v int32) {
	o.Conid = &v
}

// GetCompanyHeader returns the CompanyHeader field value if set, zero value otherwise.
func (o *InlineResponse20018) GetCompanyHeader() string {
	if o == nil || o.CompanyHeader == nil {
		var ret string
		return ret
	}
	return *o.CompanyHeader
}

// GetCompanyHeaderOk returns a tuple with the CompanyHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018) GetCompanyHeaderOk() (*string, bool) {
	if o == nil || o.CompanyHeader == nil {
		return nil, false
	}
	return o.CompanyHeader, true
}

// HasCompanyHeader returns a boolean if a field has been set.
func (o *InlineResponse20018) HasCompanyHeader() bool {
	if o != nil && o.CompanyHeader != nil {
		return true
	}

	return false
}

// SetCompanyHeader gets a reference to the given string and assigns it to the CompanyHeader field.
func (o *InlineResponse20018) SetCompanyHeader(v string) {
	o.CompanyHeader = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *InlineResponse20018) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *InlineResponse20018) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *InlineResponse20018) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *InlineResponse20018) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *InlineResponse20018) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *InlineResponse20018) SetSymbol(v string) {
	o.Symbol = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse20018) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse20018) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse20018) SetDescription(v string) {
	o.Description = &v
}

// GetOpt returns the Opt field value if set, zero value otherwise.
func (o *InlineResponse20018) GetOpt() string {
	if o == nil || o.Opt == nil {
		var ret string
		return ret
	}
	return *o.Opt
}

// GetOptOk returns a tuple with the Opt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018) GetOptOk() (*string, bool) {
	if o == nil || o.Opt == nil {
		return nil, false
	}
	return o.Opt, true
}

// HasOpt returns a boolean if a field has been set.
func (o *InlineResponse20018) HasOpt() bool {
	if o != nil && o.Opt != nil {
		return true
	}

	return false
}

// SetOpt gets a reference to the given string and assigns it to the Opt field.
func (o *InlineResponse20018) SetOpt(v string) {
	o.Opt = &v
}

// GetWar returns the War field value if set, zero value otherwise.
func (o *InlineResponse20018) GetWar() string {
	if o == nil || o.War == nil {
		var ret string
		return ret
	}
	return *o.War
}

// GetWarOk returns a tuple with the War field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018) GetWarOk() (*string, bool) {
	if o == nil || o.War == nil {
		return nil, false
	}
	return o.War, true
}

// HasWar returns a boolean if a field has been set.
func (o *InlineResponse20018) HasWar() bool {
	if o != nil && o.War != nil {
		return true
	}

	return false
}

// SetWar gets a reference to the given string and assigns it to the War field.
func (o *InlineResponse20018) SetWar(v string) {
	o.War = &v
}

// GetSections returns the Sections field value if set, zero value otherwise.
func (o *InlineResponse20018) GetSections() []map[string]interface{} {
	if o == nil || o.Sections == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Sections
}

// GetSectionsOk returns a tuple with the Sections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20018) GetSectionsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Sections == nil {
		return nil, false
	}
	return o.Sections, true
}

// HasSections returns a boolean if a field has been set.
func (o *InlineResponse20018) HasSections() bool {
	if o != nil && o.Sections != nil {
		return true
	}

	return false
}

// SetSections gets a reference to the given []map[string]interface{} and assigns it to the Sections field.
func (o *InlineResponse20018) SetSections(v []map[string]interface{}) {
	o.Sections = &v
}

func (o InlineResponse20018) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Conid != nil {
		toSerialize["conid"] = o.Conid
	}
	if o.CompanyHeader != nil {
		toSerialize["companyHeader"] = o.CompanyHeader
	}
	if o.CompanyName != nil {
		toSerialize["companyName"] = o.CompanyName
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Opt != nil {
		toSerialize["opt"] = o.Opt
	}
	if o.War != nil {
		toSerialize["war"] = o.War
	}
	if o.Sections != nil {
		toSerialize["sections"] = o.Sections
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20018 struct {
	value *InlineResponse20018
	isSet bool
}

func (v NullableInlineResponse20018) Get() *InlineResponse20018 {
	return v.value
}

func (v *NullableInlineResponse20018) Set(val *InlineResponse20018) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20018) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20018) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20018(val *InlineResponse20018) *NullableInlineResponse20018 {
	return &NullableInlineResponse20018{value: val, isSet: true}
}

func (v NullableInlineResponse20018) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20018) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


