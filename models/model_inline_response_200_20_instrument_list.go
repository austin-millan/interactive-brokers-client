/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20020InstrumentList struct for InlineResponse20020InstrumentList
type InlineResponse20020InstrumentList struct {
	DisplayName *string `json:"display_name,omitempty"`
	Type *string `json:"type,omitempty"`
	Filters *[]string `json:"filters,omitempty"`
}

// NewInlineResponse20020InstrumentList instantiates a new InlineResponse20020InstrumentList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20020InstrumentList() *InlineResponse20020InstrumentList {
	this := InlineResponse20020InstrumentList{}
	return &this
}

// NewInlineResponse20020InstrumentListWithDefaults instantiates a new InlineResponse20020InstrumentList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20020InstrumentListWithDefaults() *InlineResponse20020InstrumentList {
	this := InlineResponse20020InstrumentList{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *InlineResponse20020InstrumentList) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020InstrumentList) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *InlineResponse20020InstrumentList) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *InlineResponse20020InstrumentList) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InlineResponse20020InstrumentList) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020InstrumentList) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InlineResponse20020InstrumentList) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InlineResponse20020InstrumentList) SetType(v string) {
	o.Type = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *InlineResponse20020InstrumentList) GetFilters() []string {
	if o == nil || o.Filters == nil {
		var ret []string
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020InstrumentList) GetFiltersOk() (*[]string, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *InlineResponse20020InstrumentList) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []string and assigns it to the Filters field.
func (o *InlineResponse20020InstrumentList) SetFilters(v []string) {
	o.Filters = &v
}

func (o InlineResponse20020InstrumentList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20020InstrumentList struct {
	value *InlineResponse20020InstrumentList
	isSet bool
}

func (v NullableInlineResponse20020InstrumentList) Get() *InlineResponse20020InstrumentList {
	return v.value
}

func (v *NullableInlineResponse20020InstrumentList) Set(val *InlineResponse20020InstrumentList) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20020InstrumentList) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20020InstrumentList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20020InstrumentList(val *InlineResponse20020InstrumentList) *NullableInlineResponse20020InstrumentList {
	return &NullableInlineResponse20020InstrumentList{value: val, isSet: true}
}

func (v NullableInlineResponse20020InstrumentList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20020InstrumentList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


