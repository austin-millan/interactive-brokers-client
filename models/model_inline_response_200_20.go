/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20020 struct for InlineResponse20020
type InlineResponse20020 struct {
	ScanTypeList *[]InlineResponse20020ScanTypeList `json:"scan_type_list,omitempty"`
	InstrumentList *[]InlineResponse20020InstrumentList `json:"instrument_list,omitempty"`
	FilterList *[]InlineResponse20020FilterList `json:"filter_list,omitempty"`
	LocationTree *[]InlineResponse20020LocationTree `json:"location_tree,omitempty"`
}

// NewInlineResponse20020 instantiates a new InlineResponse20020 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20020() *InlineResponse20020 {
	this := InlineResponse20020{}
	return &this
}

// NewInlineResponse20020WithDefaults instantiates a new InlineResponse20020 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20020WithDefaults() *InlineResponse20020 {
	this := InlineResponse20020{}
	return &this
}

// GetScanTypeList returns the ScanTypeList field value if set, zero value otherwise.
func (o *InlineResponse20020) GetScanTypeList() []InlineResponse20020ScanTypeList {
	if o == nil || o.ScanTypeList == nil {
		var ret []InlineResponse20020ScanTypeList
		return ret
	}
	return *o.ScanTypeList
}

// GetScanTypeListOk returns a tuple with the ScanTypeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetScanTypeListOk() (*[]InlineResponse20020ScanTypeList, bool) {
	if o == nil || o.ScanTypeList == nil {
		return nil, false
	}
	return o.ScanTypeList, true
}

// HasScanTypeList returns a boolean if a field has been set.
func (o *InlineResponse20020) HasScanTypeList() bool {
	if o != nil && o.ScanTypeList != nil {
		return true
	}

	return false
}

// SetScanTypeList gets a reference to the given []InlineResponse20020ScanTypeList and assigns it to the ScanTypeList field.
func (o *InlineResponse20020) SetScanTypeList(v []InlineResponse20020ScanTypeList) {
	o.ScanTypeList = &v
}

// GetInstrumentList returns the InstrumentList field value if set, zero value otherwise.
func (o *InlineResponse20020) GetInstrumentList() []InlineResponse20020InstrumentList {
	if o == nil || o.InstrumentList == nil {
		var ret []InlineResponse20020InstrumentList
		return ret
	}
	return *o.InstrumentList
}

// GetInstrumentListOk returns a tuple with the InstrumentList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetInstrumentListOk() (*[]InlineResponse20020InstrumentList, bool) {
	if o == nil || o.InstrumentList == nil {
		return nil, false
	}
	return o.InstrumentList, true
}

// HasInstrumentList returns a boolean if a field has been set.
func (o *InlineResponse20020) HasInstrumentList() bool {
	if o != nil && o.InstrumentList != nil {
		return true
	}

	return false
}

// SetInstrumentList gets a reference to the given []InlineResponse20020InstrumentList and assigns it to the InstrumentList field.
func (o *InlineResponse20020) SetInstrumentList(v []InlineResponse20020InstrumentList) {
	o.InstrumentList = &v
}

// GetFilterList returns the FilterList field value if set, zero value otherwise.
func (o *InlineResponse20020) GetFilterList() []InlineResponse20020FilterList {
	if o == nil || o.FilterList == nil {
		var ret []InlineResponse20020FilterList
		return ret
	}
	return *o.FilterList
}

// GetFilterListOk returns a tuple with the FilterList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetFilterListOk() (*[]InlineResponse20020FilterList, bool) {
	if o == nil || o.FilterList == nil {
		return nil, false
	}
	return o.FilterList, true
}

// HasFilterList returns a boolean if a field has been set.
func (o *InlineResponse20020) HasFilterList() bool {
	if o != nil && o.FilterList != nil {
		return true
	}

	return false
}

// SetFilterList gets a reference to the given []InlineResponse20020FilterList and assigns it to the FilterList field.
func (o *InlineResponse20020) SetFilterList(v []InlineResponse20020FilterList) {
	o.FilterList = &v
}

// GetLocationTree returns the LocationTree field value if set, zero value otherwise.
func (o *InlineResponse20020) GetLocationTree() []InlineResponse20020LocationTree {
	if o == nil || o.LocationTree == nil {
		var ret []InlineResponse20020LocationTree
		return ret
	}
	return *o.LocationTree
}

// GetLocationTreeOk returns a tuple with the LocationTree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetLocationTreeOk() (*[]InlineResponse20020LocationTree, bool) {
	if o == nil || o.LocationTree == nil {
		return nil, false
	}
	return o.LocationTree, true
}

// HasLocationTree returns a boolean if a field has been set.
func (o *InlineResponse20020) HasLocationTree() bool {
	if o != nil && o.LocationTree != nil {
		return true
	}

	return false
}

// SetLocationTree gets a reference to the given []InlineResponse20020LocationTree and assigns it to the LocationTree field.
func (o *InlineResponse20020) SetLocationTree(v []InlineResponse20020LocationTree) {
	o.LocationTree = &v
}

func (o InlineResponse20020) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ScanTypeList != nil {
		toSerialize["scan_type_list"] = o.ScanTypeList
	}
	if o.InstrumentList != nil {
		toSerialize["instrument_list"] = o.InstrumentList
	}
	if o.FilterList != nil {
		toSerialize["filter_list"] = o.FilterList
	}
	if o.LocationTree != nil {
		toSerialize["location_tree"] = o.LocationTree
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20020 struct {
	value *InlineResponse20020
	isSet bool
}

func (v NullableInlineResponse20020) Get() *InlineResponse20020 {
	return v.value
}

func (v *NullableInlineResponse20020) Set(val *InlineResponse20020) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20020) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20020) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20020(val *InlineResponse20020) *NullableInlineResponse20020 {
	return &NullableInlineResponse20020{value: val, isSet: true}
}

func (v NullableInlineResponse20020) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20020) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


