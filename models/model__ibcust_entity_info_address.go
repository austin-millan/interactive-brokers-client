/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IbcustEntityInfoAddress struct for IbcustEntityInfoAddress
type IbcustEntityInfoAddress struct {
	Street *string `json:"street,omitempty"`
	Street2 *string `json:"street2,omitempty"`
	City *string `json:"city,omitempty"`
	State *string `json:"state,omitempty"`
	PostalCode *string `json:"postalCode,omitempty"`
	Country *string `json:"country,omitempty"`
	CountryCode *string `json:"countryCode,omitempty"`
	Compact *string `json:"compact,omitempty"`
}

// NewIbcustEntityInfoAddress instantiates a new IbcustEntityInfoAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIbcustEntityInfoAddress() *IbcustEntityInfoAddress {
	this := IbcustEntityInfoAddress{}
	return &this
}

// NewIbcustEntityInfoAddressWithDefaults instantiates a new IbcustEntityInfoAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIbcustEntityInfoAddressWithDefaults() *IbcustEntityInfoAddress {
	this := IbcustEntityInfoAddress{}
	return &this
}

// GetStreet returns the Street field value if set, zero value otherwise.
func (o *IbcustEntityInfoAddress) GetStreet() string {
	if o == nil || o.Street == nil {
		var ret string
		return ret
	}
	return *o.Street
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoAddress) GetStreetOk() (*string, bool) {
	if o == nil || o.Street == nil {
		return nil, false
	}
	return o.Street, true
}

// HasStreet returns a boolean if a field has been set.
func (o *IbcustEntityInfoAddress) HasStreet() bool {
	if o != nil && o.Street != nil {
		return true
	}

	return false
}

// SetStreet gets a reference to the given string and assigns it to the Street field.
func (o *IbcustEntityInfoAddress) SetStreet(v string) {
	o.Street = &v
}

// GetStreet2 returns the Street2 field value if set, zero value otherwise.
func (o *IbcustEntityInfoAddress) GetStreet2() string {
	if o == nil || o.Street2 == nil {
		var ret string
		return ret
	}
	return *o.Street2
}

// GetStreet2Ok returns a tuple with the Street2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoAddress) GetStreet2Ok() (*string, bool) {
	if o == nil || o.Street2 == nil {
		return nil, false
	}
	return o.Street2, true
}

// HasStreet2 returns a boolean if a field has been set.
func (o *IbcustEntityInfoAddress) HasStreet2() bool {
	if o != nil && o.Street2 != nil {
		return true
	}

	return false
}

// SetStreet2 gets a reference to the given string and assigns it to the Street2 field.
func (o *IbcustEntityInfoAddress) SetStreet2(v string) {
	o.Street2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *IbcustEntityInfoAddress) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoAddress) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *IbcustEntityInfoAddress) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *IbcustEntityInfoAddress) SetCity(v string) {
	o.City = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *IbcustEntityInfoAddress) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoAddress) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *IbcustEntityInfoAddress) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *IbcustEntityInfoAddress) SetState(v string) {
	o.State = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *IbcustEntityInfoAddress) GetPostalCode() string {
	if o == nil || o.PostalCode == nil {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *IbcustEntityInfoAddress) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *IbcustEntityInfoAddress) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *IbcustEntityInfoAddress) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoAddress) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *IbcustEntityInfoAddress) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *IbcustEntityInfoAddress) SetCountry(v string) {
	o.Country = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *IbcustEntityInfoAddress) GetCountryCode() string {
	if o == nil || o.CountryCode == nil {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoAddress) GetCountryCodeOk() (*string, bool) {
	if o == nil || o.CountryCode == nil {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *IbcustEntityInfoAddress) HasCountryCode() bool {
	if o != nil && o.CountryCode != nil {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *IbcustEntityInfoAddress) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCompact returns the Compact field value if set, zero value otherwise.
func (o *IbcustEntityInfoAddress) GetCompact() string {
	if o == nil || o.Compact == nil {
		var ret string
		return ret
	}
	return *o.Compact
}

// GetCompactOk returns a tuple with the Compact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IbcustEntityInfoAddress) GetCompactOk() (*string, bool) {
	if o == nil || o.Compact == nil {
		return nil, false
	}
	return o.Compact, true
}

// HasCompact returns a boolean if a field has been set.
func (o *IbcustEntityInfoAddress) HasCompact() bool {
	if o != nil && o.Compact != nil {
		return true
	}

	return false
}

// SetCompact gets a reference to the given string and assigns it to the Compact field.
func (o *IbcustEntityInfoAddress) SetCompact(v string) {
	o.Compact = &v
}

func (o IbcustEntityInfoAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Street != nil {
		toSerialize["street"] = o.Street
	}
	if o.Street2 != nil {
		toSerialize["street2"] = o.Street2
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.PostalCode != nil {
		toSerialize["postalCode"] = o.PostalCode
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.CountryCode != nil {
		toSerialize["countryCode"] = o.CountryCode
	}
	if o.Compact != nil {
		toSerialize["compact"] = o.Compact
	}
	return json.Marshal(toSerialize)
}

type NullableIbcustEntityInfoAddress struct {
	value *IbcustEntityInfoAddress
	isSet bool
}

func (v NullableIbcustEntityInfoAddress) Get() *IbcustEntityInfoAddress {
	return v.value
}

func (v *NullableIbcustEntityInfoAddress) Set(val *IbcustEntityInfoAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableIbcustEntityInfoAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableIbcustEntityInfoAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIbcustEntityInfoAddress(val *IbcustEntityInfoAddress) *NullableIbcustEntityInfoAddress {
	return &NullableIbcustEntityInfoAddress{value: val, isSet: true}
}

func (v NullableIbcustEntityInfoAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIbcustEntityInfoAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


