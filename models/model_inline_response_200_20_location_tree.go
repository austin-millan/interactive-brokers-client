/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20020LocationTree struct for InlineResponse20020LocationTree
type InlineResponse20020LocationTree struct {
	DisplayName *string `json:"display_name,omitempty"`
	Type *string `json:"type,omitempty"`
	Locations *[]InlineResponse20020Locations `json:"locations,omitempty"`
}

// NewInlineResponse20020LocationTree instantiates a new InlineResponse20020LocationTree object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20020LocationTree() *InlineResponse20020LocationTree {
	this := InlineResponse20020LocationTree{}
	return &this
}

// NewInlineResponse20020LocationTreeWithDefaults instantiates a new InlineResponse20020LocationTree object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20020LocationTreeWithDefaults() *InlineResponse20020LocationTree {
	this := InlineResponse20020LocationTree{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *InlineResponse20020LocationTree) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020LocationTree) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *InlineResponse20020LocationTree) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *InlineResponse20020LocationTree) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InlineResponse20020LocationTree) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020LocationTree) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InlineResponse20020LocationTree) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InlineResponse20020LocationTree) SetType(v string) {
	o.Type = &v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *InlineResponse20020LocationTree) GetLocations() []InlineResponse20020Locations {
	if o == nil || o.Locations == nil {
		var ret []InlineResponse20020Locations
		return ret
	}
	return *o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020LocationTree) GetLocationsOk() (*[]InlineResponse20020Locations, bool) {
	if o == nil || o.Locations == nil {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *InlineResponse20020LocationTree) HasLocations() bool {
	if o != nil && o.Locations != nil {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []InlineResponse20020Locations and assigns it to the Locations field.
func (o *InlineResponse20020LocationTree) SetLocations(v []InlineResponse20020Locations) {
	o.Locations = &v
}

func (o InlineResponse20020LocationTree) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Locations != nil {
		toSerialize["locations"] = o.Locations
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20020LocationTree struct {
	value *InlineResponse20020LocationTree
	isSet bool
}

func (v NullableInlineResponse20020LocationTree) Get() *InlineResponse20020LocationTree {
	return v.value
}

func (v *NullableInlineResponse20020LocationTree) Set(val *InlineResponse20020LocationTree) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20020LocationTree) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20020LocationTree) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20020LocationTree(val *InlineResponse20020LocationTree) *NullableInlineResponse20020LocationTree {
	return &NullableInlineResponse20020LocationTree{value: val, isSet: true}
}

func (v NullableInlineResponse20020LocationTree) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20020LocationTree) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


