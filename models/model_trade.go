/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Trade struct for Trade
type Trade struct {
	ExecutionId *string `json:"execution_id,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	Side *string `json:"side,omitempty"`
	OrderDescription *string `json:"order_description,omitempty"`
	TradeTime *string `json:"trade_time,omitempty"`
	TradeTimeR *float32 `json:"trade_time_r,omitempty"`
	Size *string `json:"size,omitempty"`
	Price *string `json:"price,omitempty"`
	Submitter *string `json:"submitter,omitempty"`
	Exchange *string `json:"exchange,omitempty"`
	Comission *float32 `json:"comission,omitempty"`
	NetAmount *float32 `json:"net_amount,omitempty"`
	Account *string `json:"account,omitempty"`
	CompanyName *string `json:"company_name,omitempty"`
	ContractDescription1 *string `json:"contract_description_1,omitempty"`
	SecType *string `json:"sec_type,omitempty"`
	Conidex *string `json:"conidex,omitempty"`
	Position *string `json:"position,omitempty"`
	ClearingId *string `json:"clearing_id,omitempty"`
	ClearingName *string `json:"clearing_name,omitempty"`
	// User defined string used to identify the order. Value is set using \"cOID\" field while placing an order.
	OrderRef *string `json:"order_ref,omitempty"`
}

// NewTrade instantiates a new Trade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrade() *Trade {
	this := Trade{}
	return &this
}

// NewTradeWithDefaults instantiates a new Trade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTradeWithDefaults() *Trade {
	this := Trade{}
	return &this
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *Trade) GetExecutionId() string {
	if o == nil || o.ExecutionId == nil {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetExecutionIdOk() (*string, bool) {
	if o == nil || o.ExecutionId == nil {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *Trade) HasExecutionId() bool {
	if o != nil && o.ExecutionId != nil {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *Trade) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *Trade) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *Trade) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *Trade) SetSymbol(v string) {
	o.Symbol = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *Trade) GetSide() string {
	if o == nil || o.Side == nil {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetSideOk() (*string, bool) {
	if o == nil || o.Side == nil {
		return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *Trade) HasSide() bool {
	if o != nil && o.Side != nil {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *Trade) SetSide(v string) {
	o.Side = &v
}

// GetOrderDescription returns the OrderDescription field value if set, zero value otherwise.
func (o *Trade) GetOrderDescription() string {
	if o == nil || o.OrderDescription == nil {
		var ret string
		return ret
	}
	return *o.OrderDescription
}

// GetOrderDescriptionOk returns a tuple with the OrderDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetOrderDescriptionOk() (*string, bool) {
	if o == nil || o.OrderDescription == nil {
		return nil, false
	}
	return o.OrderDescription, true
}

// HasOrderDescription returns a boolean if a field has been set.
func (o *Trade) HasOrderDescription() bool {
	if o != nil && o.OrderDescription != nil {
		return true
	}

	return false
}

// SetOrderDescription gets a reference to the given string and assigns it to the OrderDescription field.
func (o *Trade) SetOrderDescription(v string) {
	o.OrderDescription = &v
}

// GetTradeTime returns the TradeTime field value if set, zero value otherwise.
func (o *Trade) GetTradeTime() string {
	if o == nil || o.TradeTime == nil {
		var ret string
		return ret
	}
	return *o.TradeTime
}

// GetTradeTimeOk returns a tuple with the TradeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetTradeTimeOk() (*string, bool) {
	if o == nil || o.TradeTime == nil {
		return nil, false
	}
	return o.TradeTime, true
}

// HasTradeTime returns a boolean if a field has been set.
func (o *Trade) HasTradeTime() bool {
	if o != nil && o.TradeTime != nil {
		return true
	}

	return false
}

// SetTradeTime gets a reference to the given string and assigns it to the TradeTime field.
func (o *Trade) SetTradeTime(v string) {
	o.TradeTime = &v
}

// GetTradeTimeR returns the TradeTimeR field value if set, zero value otherwise.
func (o *Trade) GetTradeTimeR() float32 {
	if o == nil || o.TradeTimeR == nil {
		var ret float32
		return ret
	}
	return *o.TradeTimeR
}

// GetTradeTimeROk returns a tuple with the TradeTimeR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetTradeTimeROk() (*float32, bool) {
	if o == nil || o.TradeTimeR == nil {
		return nil, false
	}
	return o.TradeTimeR, true
}

// HasTradeTimeR returns a boolean if a field has been set.
func (o *Trade) HasTradeTimeR() bool {
	if o != nil && o.TradeTimeR != nil {
		return true
	}

	return false
}

// SetTradeTimeR gets a reference to the given float32 and assigns it to the TradeTimeR field.
func (o *Trade) SetTradeTimeR(v float32) {
	o.TradeTimeR = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Trade) GetSize() string {
	if o == nil || o.Size == nil {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetSizeOk() (*string, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Trade) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *Trade) SetSize(v string) {
	o.Size = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *Trade) GetPrice() string {
	if o == nil || o.Price == nil {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetPriceOk() (*string, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *Trade) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *Trade) SetPrice(v string) {
	o.Price = &v
}

// GetSubmitter returns the Submitter field value if set, zero value otherwise.
func (o *Trade) GetSubmitter() string {
	if o == nil || o.Submitter == nil {
		var ret string
		return ret
	}
	return *o.Submitter
}

// GetSubmitterOk returns a tuple with the Submitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetSubmitterOk() (*string, bool) {
	if o == nil || o.Submitter == nil {
		return nil, false
	}
	return o.Submitter, true
}

// HasSubmitter returns a boolean if a field has been set.
func (o *Trade) HasSubmitter() bool {
	if o != nil && o.Submitter != nil {
		return true
	}

	return false
}

// SetSubmitter gets a reference to the given string and assigns it to the Submitter field.
func (o *Trade) SetSubmitter(v string) {
	o.Submitter = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *Trade) GetExchange() string {
	if o == nil || o.Exchange == nil {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetExchangeOk() (*string, bool) {
	if o == nil || o.Exchange == nil {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *Trade) HasExchange() bool {
	if o != nil && o.Exchange != nil {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *Trade) SetExchange(v string) {
	o.Exchange = &v
}

// GetComission returns the Comission field value if set, zero value otherwise.
func (o *Trade) GetComission() float32 {
	if o == nil || o.Comission == nil {
		var ret float32
		return ret
	}
	return *o.Comission
}

// GetComissionOk returns a tuple with the Comission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetComissionOk() (*float32, bool) {
	if o == nil || o.Comission == nil {
		return nil, false
	}
	return o.Comission, true
}

// HasComission returns a boolean if a field has been set.
func (o *Trade) HasComission() bool {
	if o != nil && o.Comission != nil {
		return true
	}

	return false
}

// SetComission gets a reference to the given float32 and assigns it to the Comission field.
func (o *Trade) SetComission(v float32) {
	o.Comission = &v
}

// GetNetAmount returns the NetAmount field value if set, zero value otherwise.
func (o *Trade) GetNetAmount() float32 {
	if o == nil || o.NetAmount == nil {
		var ret float32
		return ret
	}
	return *o.NetAmount
}

// GetNetAmountOk returns a tuple with the NetAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetNetAmountOk() (*float32, bool) {
	if o == nil || o.NetAmount == nil {
		return nil, false
	}
	return o.NetAmount, true
}

// HasNetAmount returns a boolean if a field has been set.
func (o *Trade) HasNetAmount() bool {
	if o != nil && o.NetAmount != nil {
		return true
	}

	return false
}

// SetNetAmount gets a reference to the given float32 and assigns it to the NetAmount field.
func (o *Trade) SetNetAmount(v float32) {
	o.NetAmount = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *Trade) GetAccount() string {
	if o == nil || o.Account == nil {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetAccountOk() (*string, bool) {
	if o == nil || o.Account == nil {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *Trade) HasAccount() bool {
	if o != nil && o.Account != nil {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *Trade) SetAccount(v string) {
	o.Account = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *Trade) GetCompanyName() string {
	if o == nil || o.CompanyName == nil {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetCompanyNameOk() (*string, bool) {
	if o == nil || o.CompanyName == nil {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *Trade) HasCompanyName() bool {
	if o != nil && o.CompanyName != nil {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *Trade) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetContractDescription1 returns the ContractDescription1 field value if set, zero value otherwise.
func (o *Trade) GetContractDescription1() string {
	if o == nil || o.ContractDescription1 == nil {
		var ret string
		return ret
	}
	return *o.ContractDescription1
}

// GetContractDescription1Ok returns a tuple with the ContractDescription1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetContractDescription1Ok() (*string, bool) {
	if o == nil || o.ContractDescription1 == nil {
		return nil, false
	}
	return o.ContractDescription1, true
}

// HasContractDescription1 returns a boolean if a field has been set.
func (o *Trade) HasContractDescription1() bool {
	if o != nil && o.ContractDescription1 != nil {
		return true
	}

	return false
}

// SetContractDescription1 gets a reference to the given string and assigns it to the ContractDescription1 field.
func (o *Trade) SetContractDescription1(v string) {
	o.ContractDescription1 = &v
}

// GetSecType returns the SecType field value if set, zero value otherwise.
func (o *Trade) GetSecType() string {
	if o == nil || o.SecType == nil {
		var ret string
		return ret
	}
	return *o.SecType
}

// GetSecTypeOk returns a tuple with the SecType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetSecTypeOk() (*string, bool) {
	if o == nil || o.SecType == nil {
		return nil, false
	}
	return o.SecType, true
}

// HasSecType returns a boolean if a field has been set.
func (o *Trade) HasSecType() bool {
	if o != nil && o.SecType != nil {
		return true
	}

	return false
}

// SetSecType gets a reference to the given string and assigns it to the SecType field.
func (o *Trade) SetSecType(v string) {
	o.SecType = &v
}

// GetConidex returns the Conidex field value if set, zero value otherwise.
func (o *Trade) GetConidex() string {
	if o == nil || o.Conidex == nil {
		var ret string
		return ret
	}
	return *o.Conidex
}

// GetConidexOk returns a tuple with the Conidex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetConidexOk() (*string, bool) {
	if o == nil || o.Conidex == nil {
		return nil, false
	}
	return o.Conidex, true
}

// HasConidex returns a boolean if a field has been set.
func (o *Trade) HasConidex() bool {
	if o != nil && o.Conidex != nil {
		return true
	}

	return false
}

// SetConidex gets a reference to the given string and assigns it to the Conidex field.
func (o *Trade) SetConidex(v string) {
	o.Conidex = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *Trade) GetPosition() string {
	if o == nil || o.Position == nil {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetPositionOk() (*string, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *Trade) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *Trade) SetPosition(v string) {
	o.Position = &v
}

// GetClearingId returns the ClearingId field value if set, zero value otherwise.
func (o *Trade) GetClearingId() string {
	if o == nil || o.ClearingId == nil {
		var ret string
		return ret
	}
	return *o.ClearingId
}

// GetClearingIdOk returns a tuple with the ClearingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetClearingIdOk() (*string, bool) {
	if o == nil || o.ClearingId == nil {
		return nil, false
	}
	return o.ClearingId, true
}

// HasClearingId returns a boolean if a field has been set.
func (o *Trade) HasClearingId() bool {
	if o != nil && o.ClearingId != nil {
		return true
	}

	return false
}

// SetClearingId gets a reference to the given string and assigns it to the ClearingId field.
func (o *Trade) SetClearingId(v string) {
	o.ClearingId = &v
}

// GetClearingName returns the ClearingName field value if set, zero value otherwise.
func (o *Trade) GetClearingName() string {
	if o == nil || o.ClearingName == nil {
		var ret string
		return ret
	}
	return *o.ClearingName
}

// GetClearingNameOk returns a tuple with the ClearingName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetClearingNameOk() (*string, bool) {
	if o == nil || o.ClearingName == nil {
		return nil, false
	}
	return o.ClearingName, true
}

// HasClearingName returns a boolean if a field has been set.
func (o *Trade) HasClearingName() bool {
	if o != nil && o.ClearingName != nil {
		return true
	}

	return false
}

// SetClearingName gets a reference to the given string and assigns it to the ClearingName field.
func (o *Trade) SetClearingName(v string) {
	o.ClearingName = &v
}

// GetOrderRef returns the OrderRef field value if set, zero value otherwise.
func (o *Trade) GetOrderRef() string {
	if o == nil || o.OrderRef == nil {
		var ret string
		return ret
	}
	return *o.OrderRef
}

// GetOrderRefOk returns a tuple with the OrderRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Trade) GetOrderRefOk() (*string, bool) {
	if o == nil || o.OrderRef == nil {
		return nil, false
	}
	return o.OrderRef, true
}

// HasOrderRef returns a boolean if a field has been set.
func (o *Trade) HasOrderRef() bool {
	if o != nil && o.OrderRef != nil {
		return true
	}

	return false
}

// SetOrderRef gets a reference to the given string and assigns it to the OrderRef field.
func (o *Trade) SetOrderRef(v string) {
	o.OrderRef = &v
}

func (o Trade) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExecutionId != nil {
		toSerialize["execution_id"] = o.ExecutionId
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Side != nil {
		toSerialize["side"] = o.Side
	}
	if o.OrderDescription != nil {
		toSerialize["order_description"] = o.OrderDescription
	}
	if o.TradeTime != nil {
		toSerialize["trade_time"] = o.TradeTime
	}
	if o.TradeTimeR != nil {
		toSerialize["trade_time_r"] = o.TradeTimeR
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Submitter != nil {
		toSerialize["submitter"] = o.Submitter
	}
	if o.Exchange != nil {
		toSerialize["exchange"] = o.Exchange
	}
	if o.Comission != nil {
		toSerialize["comission"] = o.Comission
	}
	if o.NetAmount != nil {
		toSerialize["net_amount"] = o.NetAmount
	}
	if o.Account != nil {
		toSerialize["account"] = o.Account
	}
	if o.CompanyName != nil {
		toSerialize["company_name"] = o.CompanyName
	}
	if o.ContractDescription1 != nil {
		toSerialize["contract_description_1"] = o.ContractDescription1
	}
	if o.SecType != nil {
		toSerialize["sec_type"] = o.SecType
	}
	if o.Conidex != nil {
		toSerialize["conidex"] = o.Conidex
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.ClearingId != nil {
		toSerialize["clearing_id"] = o.ClearingId
	}
	if o.ClearingName != nil {
		toSerialize["clearing_name"] = o.ClearingName
	}
	if o.OrderRef != nil {
		toSerialize["order_ref"] = o.OrderRef
	}
	return json.Marshal(toSerialize)
}

type NullableTrade struct {
	value *Trade
	isSet bool
}

func (v NullableTrade) Get() *Trade {
	return v.value
}

func (v *NullableTrade) Set(val *Trade) {
	v.value = val
	v.isSet = true
}

func (v NullableTrade) IsSet() bool {
	return v.isSet
}

func (v *NullableTrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrade(val *Trade) *NullableTrade {
	return &NullableTrade{value: val, isSet: true}
}

func (v NullableTrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


