/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Performance struct for Performance
type Performance struct {
	Id *string `json:"id,omitempty"`
	Cps *PerformanceCps `json:"cps,omitempty"`
	Tpps *PerformanceTpps `json:"tpps,omitempty"`
	Nav *PerformanceNav `json:"nav,omitempty"`
	Pm *string `json:"pm,omitempty"`
	Included *[]string `json:"included,omitempty"`
	CurrencyType *string `json:"currencyType,omitempty"`
	Rc *int32 `json:"rc,omitempty"`
}

// NewPerformance instantiates a new Performance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformance() *Performance {
	this := Performance{}
	return &this
}

// NewPerformanceWithDefaults instantiates a new Performance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformanceWithDefaults() *Performance {
	this := Performance{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Performance) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Performance) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Performance) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Performance) SetId(v string) {
	o.Id = &v
}

// GetCps returns the Cps field value if set, zero value otherwise.
func (o *Performance) GetCps() PerformanceCps {
	if o == nil || o.Cps == nil {
		var ret PerformanceCps
		return ret
	}
	return *o.Cps
}

// GetCpsOk returns a tuple with the Cps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Performance) GetCpsOk() (*PerformanceCps, bool) {
	if o == nil || o.Cps == nil {
		return nil, false
	}
	return o.Cps, true
}

// HasCps returns a boolean if a field has been set.
func (o *Performance) HasCps() bool {
	if o != nil && o.Cps != nil {
		return true
	}

	return false
}

// SetCps gets a reference to the given PerformanceCps and assigns it to the Cps field.
func (o *Performance) SetCps(v PerformanceCps) {
	o.Cps = &v
}

// GetTpps returns the Tpps field value if set, zero value otherwise.
func (o *Performance) GetTpps() PerformanceTpps {
	if o == nil || o.Tpps == nil {
		var ret PerformanceTpps
		return ret
	}
	return *o.Tpps
}

// GetTppsOk returns a tuple with the Tpps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Performance) GetTppsOk() (*PerformanceTpps, bool) {
	if o == nil || o.Tpps == nil {
		return nil, false
	}
	return o.Tpps, true
}

// HasTpps returns a boolean if a field has been set.
func (o *Performance) HasTpps() bool {
	if o != nil && o.Tpps != nil {
		return true
	}

	return false
}

// SetTpps gets a reference to the given PerformanceTpps and assigns it to the Tpps field.
func (o *Performance) SetTpps(v PerformanceTpps) {
	o.Tpps = &v
}

// GetNav returns the Nav field value if set, zero value otherwise.
func (o *Performance) GetNav() PerformanceNav {
	if o == nil || o.Nav == nil {
		var ret PerformanceNav
		return ret
	}
	return *o.Nav
}

// GetNavOk returns a tuple with the Nav field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Performance) GetNavOk() (*PerformanceNav, bool) {
	if o == nil || o.Nav == nil {
		return nil, false
	}
	return o.Nav, true
}

// HasNav returns a boolean if a field has been set.
func (o *Performance) HasNav() bool {
	if o != nil && o.Nav != nil {
		return true
	}

	return false
}

// SetNav gets a reference to the given PerformanceNav and assigns it to the Nav field.
func (o *Performance) SetNav(v PerformanceNav) {
	o.Nav = &v
}

// GetPm returns the Pm field value if set, zero value otherwise.
func (o *Performance) GetPm() string {
	if o == nil || o.Pm == nil {
		var ret string
		return ret
	}
	return *o.Pm
}

// GetPmOk returns a tuple with the Pm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Performance) GetPmOk() (*string, bool) {
	if o == nil || o.Pm == nil {
		return nil, false
	}
	return o.Pm, true
}

// HasPm returns a boolean if a field has been set.
func (o *Performance) HasPm() bool {
	if o != nil && o.Pm != nil {
		return true
	}

	return false
}

// SetPm gets a reference to the given string and assigns it to the Pm field.
func (o *Performance) SetPm(v string) {
	o.Pm = &v
}

// GetIncluded returns the Included field value if set, zero value otherwise.
func (o *Performance) GetIncluded() []string {
	if o == nil || o.Included == nil {
		var ret []string
		return ret
	}
	return *o.Included
}

// GetIncludedOk returns a tuple with the Included field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Performance) GetIncludedOk() (*[]string, bool) {
	if o == nil || o.Included == nil {
		return nil, false
	}
	return o.Included, true
}

// HasIncluded returns a boolean if a field has been set.
func (o *Performance) HasIncluded() bool {
	if o != nil && o.Included != nil {
		return true
	}

	return false
}

// SetIncluded gets a reference to the given []string and assigns it to the Included field.
func (o *Performance) SetIncluded(v []string) {
	o.Included = &v
}

// GetCurrencyType returns the CurrencyType field value if set, zero value otherwise.
func (o *Performance) GetCurrencyType() string {
	if o == nil || o.CurrencyType == nil {
		var ret string
		return ret
	}
	return *o.CurrencyType
}

// GetCurrencyTypeOk returns a tuple with the CurrencyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Performance) GetCurrencyTypeOk() (*string, bool) {
	if o == nil || o.CurrencyType == nil {
		return nil, false
	}
	return o.CurrencyType, true
}

// HasCurrencyType returns a boolean if a field has been set.
func (o *Performance) HasCurrencyType() bool {
	if o != nil && o.CurrencyType != nil {
		return true
	}

	return false
}

// SetCurrencyType gets a reference to the given string and assigns it to the CurrencyType field.
func (o *Performance) SetCurrencyType(v string) {
	o.CurrencyType = &v
}

// GetRc returns the Rc field value if set, zero value otherwise.
func (o *Performance) GetRc() int32 {
	if o == nil || o.Rc == nil {
		var ret int32
		return ret
	}
	return *o.Rc
}

// GetRcOk returns a tuple with the Rc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Performance) GetRcOk() (*int32, bool) {
	if o == nil || o.Rc == nil {
		return nil, false
	}
	return o.Rc, true
}

// HasRc returns a boolean if a field has been set.
func (o *Performance) HasRc() bool {
	if o != nil && o.Rc != nil {
		return true
	}

	return false
}

// SetRc gets a reference to the given int32 and assigns it to the Rc field.
func (o *Performance) SetRc(v int32) {
	o.Rc = &v
}

func (o Performance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Cps != nil {
		toSerialize["cps"] = o.Cps
	}
	if o.Tpps != nil {
		toSerialize["tpps"] = o.Tpps
	}
	if o.Nav != nil {
		toSerialize["nav"] = o.Nav
	}
	if o.Pm != nil {
		toSerialize["pm"] = o.Pm
	}
	if o.Included != nil {
		toSerialize["included"] = o.Included
	}
	if o.CurrencyType != nil {
		toSerialize["currencyType"] = o.CurrencyType
	}
	if o.Rc != nil {
		toSerialize["rc"] = o.Rc
	}
	return json.Marshal(toSerialize)
}

type NullablePerformance struct {
	value *Performance
	isSet bool
}

func (v NullablePerformance) Get() *Performance {
	return v.value
}

func (v *NullablePerformance) Set(val *Performance) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformance) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformance(val *Performance) *NullablePerformance {
	return &NullablePerformance{value: val, isSet: true}
}

func (v NullablePerformance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


