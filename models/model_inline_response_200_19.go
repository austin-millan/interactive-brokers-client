/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20019 struct for InlineResponse20019
type InlineResponse20019 struct {
	Call *[]string `json:"call,omitempty"`
	Put *[]string `json:"put,omitempty"`
}

// NewInlineResponse20019 instantiates a new InlineResponse20019 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20019() *InlineResponse20019 {
	this := InlineResponse20019{}
	return &this
}

// NewInlineResponse20019WithDefaults instantiates a new InlineResponse20019 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20019WithDefaults() *InlineResponse20019 {
	this := InlineResponse20019{}
	return &this
}

// GetCall returns the Call field value if set, zero value otherwise.
func (o *InlineResponse20019) GetCall() []string {
	if o == nil || o.Call == nil {
		var ret []string
		return ret
	}
	return *o.Call
}

// GetCallOk returns a tuple with the Call field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetCallOk() (*[]string, bool) {
	if o == nil || o.Call == nil {
		return nil, false
	}
	return o.Call, true
}

// HasCall returns a boolean if a field has been set.
func (o *InlineResponse20019) HasCall() bool {
	if o != nil && o.Call != nil {
		return true
	}

	return false
}

// SetCall gets a reference to the given []string and assigns it to the Call field.
func (o *InlineResponse20019) SetCall(v []string) {
	o.Call = &v
}

// GetPut returns the Put field value if set, zero value otherwise.
func (o *InlineResponse20019) GetPut() []string {
	if o == nil || o.Put == nil {
		var ret []string
		return ret
	}
	return *o.Put
}

// GetPutOk returns a tuple with the Put field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20019) GetPutOk() (*[]string, bool) {
	if o == nil || o.Put == nil {
		return nil, false
	}
	return o.Put, true
}

// HasPut returns a boolean if a field has been set.
func (o *InlineResponse20019) HasPut() bool {
	if o != nil && o.Put != nil {
		return true
	}

	return false
}

// SetPut gets a reference to the given []string and assigns it to the Put field.
func (o *InlineResponse20019) SetPut(v []string) {
	o.Put = &v
}

func (o InlineResponse20019) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Call != nil {
		toSerialize["call"] = o.Call
	}
	if o.Put != nil {
		toSerialize["put"] = o.Put
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20019 struct {
	value *InlineResponse20019
	isSet bool
}

func (v NullableInlineResponse20019) Get() *InlineResponse20019 {
	return v.value
}

func (v *NullableInlineResponse20019) Set(val *InlineResponse20019) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20019) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20019) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20019(val *InlineResponse20019) *NullableInlineResponse20019 {
	return &NullableInlineResponse20019{value: val, isSet: true}
}

func (v NullableInlineResponse20019) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20019) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


