/*
 * Client Portal Web API
 *
 * Production version of the Client Portal Web API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse20015Equity struct for InlineResponse20015Equity
type InlineResponse20015Equity struct {
	Current *string `json:"current,omitempty"`
	Change *string `json:"change,omitempty"`
	After *string `json:"after,omitempty"`
}

// NewInlineResponse20015Equity instantiates a new InlineResponse20015Equity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20015Equity() *InlineResponse20015Equity {
	this := InlineResponse20015Equity{}
	return &this
}

// NewInlineResponse20015EquityWithDefaults instantiates a new InlineResponse20015Equity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20015EquityWithDefaults() *InlineResponse20015Equity {
	this := InlineResponse20015Equity{}
	return &this
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *InlineResponse20015Equity) GetCurrent() string {
	if o == nil || o.Current == nil {
		var ret string
		return ret
	}
	return *o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20015Equity) GetCurrentOk() (*string, bool) {
	if o == nil || o.Current == nil {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *InlineResponse20015Equity) HasCurrent() bool {
	if o != nil && o.Current != nil {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given string and assigns it to the Current field.
func (o *InlineResponse20015Equity) SetCurrent(v string) {
	o.Current = &v
}

// GetChange returns the Change field value if set, zero value otherwise.
func (o *InlineResponse20015Equity) GetChange() string {
	if o == nil || o.Change == nil {
		var ret string
		return ret
	}
	return *o.Change
}

// GetChangeOk returns a tuple with the Change field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20015Equity) GetChangeOk() (*string, bool) {
	if o == nil || o.Change == nil {
		return nil, false
	}
	return o.Change, true
}

// HasChange returns a boolean if a field has been set.
func (o *InlineResponse20015Equity) HasChange() bool {
	if o != nil && o.Change != nil {
		return true
	}

	return false
}

// SetChange gets a reference to the given string and assigns it to the Change field.
func (o *InlineResponse20015Equity) SetChange(v string) {
	o.Change = &v
}

// GetAfter returns the After field value if set, zero value otherwise.
func (o *InlineResponse20015Equity) GetAfter() string {
	if o == nil || o.After == nil {
		var ret string
		return ret
	}
	return *o.After
}

// GetAfterOk returns a tuple with the After field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20015Equity) GetAfterOk() (*string, bool) {
	if o == nil || o.After == nil {
		return nil, false
	}
	return o.After, true
}

// HasAfter returns a boolean if a field has been set.
func (o *InlineResponse20015Equity) HasAfter() bool {
	if o != nil && o.After != nil {
		return true
	}

	return false
}

// SetAfter gets a reference to the given string and assigns it to the After field.
func (o *InlineResponse20015Equity) SetAfter(v string) {
	o.After = &v
}

func (o InlineResponse20015Equity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Current != nil {
		toSerialize["current"] = o.Current
	}
	if o.Change != nil {
		toSerialize["change"] = o.Change
	}
	if o.After != nil {
		toSerialize["after"] = o.After
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20015Equity struct {
	value *InlineResponse20015Equity
	isSet bool
}

func (v NullableInlineResponse20015Equity) Get() *InlineResponse20015Equity {
	return v.value
}

func (v *NullableInlineResponse20015Equity) Set(val *InlineResponse20015Equity) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20015Equity) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20015Equity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20015Equity(val *InlineResponse20015Equity) *NullableInlineResponse20015Equity {
	return &NullableInlineResponse20015Equity{value: val, isSet: true}
}

func (v NullableInlineResponse20015Equity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20015Equity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


