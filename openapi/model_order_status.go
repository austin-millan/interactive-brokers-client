/*
 * IBKR 3rd Party Web API
 *
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
// OrderStatus Status of the order InvalidOrderStatus = '-1' New = '0' PartiallyFilled = '1' Filled = '2' DoneForTheDay = '3' Canceled = '4' Replaced = '5' PendingCancelReplace = '6' Stopped = '7' Rejected = '8' Suspended = '9' PendingNew = 'A' Calculated = 'B' Expired = 'C' AcceptedForBidding = 'D' PendingReplace = 'E'     schema:       type: object       properties:         CustomerOrderId:           type: string           description: The order ID assigned by the customer.         Ticker:           type: string           description: The symbol that identifies the trading product         ListingExchange:           type: string           description: >-             The exchange on which the trading product is listed (only for             InstrumentType=STK)         Currency:           type: string           description: >-             The currency in which the FX pair trades (only for             InstrumentType=CASH)         InstrumentType:           type: string           description: The instrument type of the contract         ContractId:           type: number           description: >-             The internal IB identifier for the trading product specified             as an integer (can be obtained in response to /secdef request)         Quantity:           type: number           description: The number of units in the order; contracts or shares         Price:           type: number           description: The order price         Order Type:           $ref: '#/definitions/orderType'         Aux Price:           type: number           description: Required Price to support Stop and Stop Limit orders         Time in Force:           $ref: '#/definitions/timeInForce'         Outside RTH:           type: number           description: >-             Indicates if order is active outside regular trading hours,             where defined. 0 = no (default), 1 = yes         Side:           type: number           description: 'Buy = ''1'', Sell = ''2'''           enum: [1, 2]         OrderRestrictions:           type: number           description: |             MultiValueString representing the restrictions associated with             an order. If more than one restriction is applicable to an             order, this field can contain multiple instructions separated             by space.              '1' Program Trade             '2' Index Arbitrage              '3' Non-Index Arbitrage         GermanHftAlgo:           type: boolean           description: >-             By setting this bool to false the customer attests that the             order is not subject to German HFT Act, was not generated             using any automated algorithm, and no algorithm determined or             changed financial instrument, side, quantity, order type,             limit or other price, trading venue or timing of this order.             Currently we cannot accept orders where this flag is set to             true. Such orders will be rejected.         Mifid2DecisionMaker:           type: string           description: >-             This field permits specification of the user's preregistered             (via account management) MiFID II short code for decision             makers.         Mifid2Algo:           type: string           description: >-             This field permits specification of the user's preregistered             (via account management) MiFID II short code for algos that             are responsible for investment decisions         Mifid2ExecutionTrader:           type: string           description: >-             This field permits specification of the user's preregistered             (via account management) MiFID II person responsible for             handling/routing of the order         Mifid2ExecutionAlgo:           type: string           description: >-             This field permits specification of the user's preregistered             (via account management) MiFID II short code for algos that             are responsible for handling/routing of the order. 
type OrderStatus string

// List of orderStatus
const (
	_1 OrderStatus = "-1"
	_0 OrderStatus = "0"
	_1 OrderStatus = "1"
	_2 OrderStatus = "2"
	_3 OrderStatus = "3"
	_4 OrderStatus = "4"
	_5 OrderStatus = "5"
	_6 OrderStatus = "6"
	_7 OrderStatus = "7"
	_8 OrderStatus = "8"
	_9 OrderStatus = "9"
	A OrderStatus = "A"
	B OrderStatus = "B"
	C OrderStatus = "C"
	D OrderStatus = "D"
	E OrderStatus = "E"
)
